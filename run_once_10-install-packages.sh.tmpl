#!/usr/bin/env sh

set -o errexit

pkgs=""

install_packages() {
  pkg=${2:-$1}
  if ! hash $1 &>/dev/null ; then
    sudo $ins $pkg
  fi
}

euse_pkg() {
  if ! grep -q $2 /etc/portage/package.use/${1#*/} 2>/dev/null ; then
    sudo euse -p $1 -E $2
  fi
}

euse_pkg_disable() {
  if ! grep -q "\-$2" /etc/portage/package.use/${1#*/} 2>/dev/null ; then
    sudo euse -p $1 -D $2
  fi
}

euse_global() {
  if ! grep -q $1 /etc/portage/make.conf ; then
    sudo euse -E $1
  fi
}

euse_global_disable() {
  if ! grep -q "\-$1\|\-\*" /etc/portage/make.conf 2>/dev/null ; then
    sudo euse -D $1
  fi
}

build_aur() {
  PKG_URL="$1"
  PKG_NAME=${PKG_URL##*/} # e.g xst-git.tar.gz
  PKG=${PKG_NAME%%.*} # e.g xst-git
  [ -d $HOME/build ] || mkdir $HOME/build
  ( cd $HOME/build \
      && wget $PKG_URL \
      && tar xvf ${PKG_NAME} \
      && cd ${PKG} \
      && makepkg -si --noconfirm
  )
}

bye() {
  echo
  echo "Install done, Bye"
  echo
}

if hash emerge 2>/dev/null ; then
  ins="emerge -av --changed-use"

  # env
  install_packages euse gentoolkit
  euse_global_disable deprecated
  euse_global zsh-completion
  euse_global vim-syntax

  {{ if eq .system.sound "alsa" }}

  euse_global alsa
  euse_global ffmpeg
  euse_global ladspa 
  euse_global speex
  euse_global libsamplerate

  pkgs="alsa-utils tap-plugins swh-plugins libsamplerate ladspa-cmt caps-plugins ladspa-bs2b alsa-plugins brave-bin"

  {{ end }}

  {{ if eq .system.sound "pulseaudio" }}

  euse_global pulseaudio
  pkgs="pulseaudio firefox-bin"

  {{ end }}

  # for vim
  euse_pkg app-editors/vim X

  # for pass
  euse_pkg app-admin/pass X

  # ncmpcpp
  euse_pkg media-sound/ncmpcpp taglib
  euse_pkg dev-libs/boost icu

  # mpd
  euse_pkg_disable media-sound/mpd network

  euse_pkg media-gfx/imagemagick jpeg
  euse_pkg media-video/mpv cli

  # neomutt
  euse_pkg mail-client/neomutt gpgme
  euse_pkg mail-client/neomutt gdbm
  euse_pkg mail-mta/msmtp sasl

  # vifm 
  euse_pkg dev-python/pillow jpeg

  sudo $ins gnupg pass vim zsh awesome mpd ncmpcpp xinit xorg-server xst nerd-fonts-iosevka \
    feh picom scrot vifm mpv zathura zathura-pdf-mupdf fdm neomutt msmtp tmux cava ueberzug \
    weechat $pkgs

elif hash pacman 2>/dev/null ; then
  ins="pacman -S --needed"

  {{ if eq .system.sound "alsa" }}

  pkgs="alsa-utils alsa-plugins ladspa swh-plugins libsamplerate"

  {{ end }}

  {{ if eq .system.sound "pulseaudio" }}

  pkgs="pulseaudio firefox"

  {{ end }}

  sudo $ins gnupg pass xclip vim zsh awesome mpd ncmpcpp xorg-xinit xorg-server base-devel wget \
    feh picom scrot vifm mpv zathura zathura-pdf-mupdf fdm neomutt imagemagick msmtp msmtp-mta \
    tmux weechat $pkgs

  {{ if eq .system.sound "alsa" }}

  # the only alternative to chrome
  build_aur https://aur.archlinux.org/cgit/aur.git/snapshot/brave-bin.tar.gz

  {{ end }}

  # AUR
  build_aur https://aur.archlinux.org/cgit/aur.git/snapshot/xst.tar.gz
  build_aur https://aur.archlinux.org/cgit/aur.git/snapshot/nerd-fonts-iosevka.tar.gz
  build_aur https://aur.archlinux.org/cgit/aur.git/snapshot/cava.tar.gz
  build_aur https://aur.archlinux.org/cgit/aur.git/snapshot/python-ueberzug.tar.gz

elif hash apt-get 2>/dev/null ; then
  ins="apt-get install"

  {{ if eq .system.sound "alsa" }}

  pkgs="alsa-utils"

  {{ end }}

  {{ if eq .system.sound "pulseaudio" }}

  pkgs="pulseaudio firefox-esr"

  {{ end }}

  sudo $ins gpgv2 gpg-agent xclip pass vim zsh awesome mpd ncmpcpp xinit xserver-xorg-core \
    xserver-xorg-input-libinput feh scrot vifm mpv zathura fdm neomutt imagemagick msmtp \
    msmtp-mta tmux weechat $pkgs

  # xst dep
  sudo $ins build-essential pkg-config x11proto-core-dev libx11-dev libxft-dev fontconfig \
    x11proto-dev libxext-dev

  [ -d ~/builds ] || mkdir -p ~/builds
  ( cd ~/builds \
    && wget https://github.com/gnotclub/xst/archive/v0.7.2.tar.gz \
    && tar xvf v0.7.2.tar.gz \
    && cd xst-0.7.2 \
    && sudo make \
    && sudo make PREFIX=/usr DESTDIR=/ install
  )

  # Iosevka font
  [ -d ~/.local/share/fonts ] || mkdir -p ~/.local/share/fonts
  [ -f ~/.local/share/fonts/Iosevka.zip ] || {
    ( cd ~/.local/share/fonts \
        && wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Iosevka.zip
    )
  }

  [ -d ~/.local/share/fonts/iosevka ] && rm -rf ~/.local/share/fonts/iosevka
  ( mkdir ~/.local/share/fonts/iosevka \
      && cd ~/.local/share/fonts/iosevka \
      && unzip ../Iosevka.zip \
      && rm ../Iosevka*.zip
  )

  fc-cache -vf ~/.local/share/fonts

  # picom
  sudo $ins meson ninja-build cmake libev-dev libx11-xcb-dev libxcb-render-util0-dev \
    libxcb-image0-dev libpixman-1-dev libxcb-damage0-dev libxcb-randr0-dev \
    libxcb-sync-dev libxcb-composite0-dev libxcb-xinerama0-dev libxcb-present-dev \
    libxcb-glx0-dev uthash-dev libconfig-dev libpcre3-dev libgl1-mesa-dev libdbus-1-dev

  git clone https://github.com/yshui/picom ~/builds/picom
  ( cd ~/builds/picom \
      && meson --buildtype=release . build \
      && ninja -C build \
      && sudo ninja -C build install
  )

  # ueberzug (vifm image preview)
  sudo apt-get install python3-pip
  sudo pip3 install ueberzug

  # set zsh
  chsh -s /usr/bin/zsh

fi

trap bye EXIT
